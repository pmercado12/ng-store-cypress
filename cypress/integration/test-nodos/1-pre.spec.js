describe('Prueba Catalogo Login', () => {

    let token = null;
    let nodoSeg = null;
    let nodoCat = null;
    beforeEach(() => {


    });

    let arrayNodos = [
        //DESASGP
        /*{ url: "192.168.101.119:7001" },
        { url: "192.168.101.119:7003" },
        { url: "192.168.101.119:7005" },
        { url: "192.168.101.119:7007" },
        { url: "192.168.101.119:7009" },
        { url: "192.168.101.120:7001" },
        { url: "192.168.101.120:7003" },
        { url: "192.168.101.120:7005" },
        { url: "192.168.101.120:7007" },
        { url: "192.168.101.120:7009" },*/
        //PRE
       { url: "192.168.101.219:7001" },
        { url: "192.168.101.219:7003" },
        { url: "192.168.101.219:7005" },
        { url: "192.168.101.219:7007" },
        { url: "192.168.101.219:7009" },
        { url: "192.168.101.219:7011" }
        //CAPA
        /*{ url: "192.168.101.155:7001" },
        { url: "192.168.101.155:7003" },
        { url: "192.168.101.155:7005" },
        { url: "192.168.101.155:7007" },
        { url: "192.168.101.155:7009" },
        { url: "192.168.101.155:7011" }*/
        //PROD NODO COM
        /*{ url: "192.168.101.166:6131" },
        { url: "192.168.101.167:6131" },
        { url: "192.168.101.168:6131" },
        { url: "192.168.101.169:6131" },
        { url: "192.168.101.171:6131" },
        { url: "192.168.101.172:6131" },
        { url: "192.168.101.240:6131" },
        { url: "192.168.101.244:6131" },
        { url: "192.168.101.246:6131" },
        { url: "192.168.101.251:6131" },*/
        //PROD NODO PRV
        /*{ url: "192.168.101.166:6291" },
        { url: "192.168.101.166:6292" },
        { url: "192.168.101.167:6291" },
        { url: "192.168.101.167:6292" },
        { url: "192.168.101.168:6291" },
        { url: "192.168.101.168:6292" },
        { url: "192.168.101.169:6291" },
        { url: "192.168.101.169:6292" },
        { url: "192.168.101.171:6291" },
        { url: "192.168.101.171:6292" },
        { url: "192.168.101.172:6291" },
        { url: "192.168.101.172:6292" },
        { url: "192.168.101.240:6291" },
        { url: "192.168.101.240:6292" },
        { url: "192.168.101.244:6291" },
        { url: "192.168.101.244:6292" },
        { url: "192.168.101.246:6291" },
        { url: "192.168.101.246:6292" },
        { url: "192.168.101.251:6291" },
        { url: "192.168.101.251:6292" },*/
        //PROD NODO SIC
        /*{ url: "192.168.101.166:6151" },
        { url: "192.168.101.167:6151" },
        { url: "192.168.101.168:6151" },
        { url: "192.168.101.169:6151" },
        { url: "192.168.101.171:6151" },
        { url: "192.168.101.172:6151" },
        { url: "192.168.101.240:6151" },
        { url: "192.168.101.244:6151" },
        { url: "192.168.101.246:6151" },
        { url: "192.168.101.251:6151" }*/
    ];

    let arrayApps = [
        { path: "rsseguridad" },
        
        //PRV
        { path: "rs-proveedores" },

        { path: "rssicoes" },
        //COM
        { path: "clasificadoresCompras" },
        { path: "procesoCompra" },
        //{ path: "catBienes" },
        //{ path: "rsclasificadores" },
        //{ path: "mercadoVirtual" }
    ];

    for (let i = 0; i < arrayApps.length; i++) {
        for (let j = 0; j < arrayNodos.length; j++) {
            it('App:' + arrayApps[i].path + ', Nodo:' + arrayNodos[j].url, () => {
                cy.request({
                    method: 'GET',
                    url: arrayNodos[j].url + "/" + arrayApps[i].path + "/checkstatus",
                    form: false
                }).then((resp) => {
                    var data = resp.body;
                    nodoSeg = data.nodo;
                    expect(data).to.have.property('baseArq', "ok");
                    expect(data).to.have.property('baseSeg', "ok");
                    expect(data).to.have.property('jndiPrincipal', "ok");
                });
            });
        }
    }


});

